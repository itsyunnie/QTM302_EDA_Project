# Scatter plot with linear regression line
ggplot(data, aes(x = School_Psychologists_Employment, y = School_Psychologists_Median_Wage)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Relationship between Number of School Psychologists and Median Wage",
x = "Number of School Psychologists",
y = "Median Wage for School Psychologists") +
theme_minimal()
# Filter and reshape the data for the relevant professions
filtered_data <- data %>%
select(State, Mental_Health_Counselors_Median_Wage, Clinical_Psychologists_Median_Wage, School_Psychologists_Median_Wage) %>%
gather(key = "Profession", value = "Median_Wage", -State)
# Ensure State is treated as a factor
filtered_data$State <- as.factor(filtered_data$State)
# Create the scatter plot with regression lines
ggplot(filtered_data, aes(x = State, y = Median_Wage, color = Profession)) +
geom_point(size = 2, alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, aes(group = Profession)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Comparison of Median Wages by State for Mental Health Professionals",
x = "State", y = "Median Wage", color = "Profession")
# Calculate summary statistics using dplyr
summary_stats <- filtered_data %>%
group_by(Profession) %>%
summarise(
Mean = mean(Median_Wage, na.rm = TRUE),
Median = median(Median_Wage, na.rm = TRUE),
SD = sd(Median_Wage, na.rm = TRUE),
Min = min(Median_Wage, na.rm = TRUE),
Max = max(Median_Wage, na.rm = TRUE),
)
# Print the summary statistics
print(summary_stats)
## In this analysis, we aim to compare the gender distribution between two categories of mental health professionals across different states in the US: Counselors and Psychologists. We utilize graphical methods to visualize and summarize the data.
## We calculate the proportions of male and female professionals in each role and reshape the data into a long format using gather(). This format is suitable for ggplot2, which allows us to easily create plots with multiple categories. To ensure that the State variable is treated as a categorical variable, we convert it to a factor.
## We create bar plots to visualize the gender distribution for each profession across different states. The geom_bar() function with the position = "dodge" parameter allows us to place bars for male and female side by side for comparison.
# Calculate gender ratios for counselors and psychologists
data <- data %>%
mutate(
Counselors_Total = Male_Counselors + Female_Counselors,
Counselors_Male_Ratio = Male_Counselors / Counselors_Total,
Counselors_Female_Ratio = Female_Counselors / Counselors_Total,
Psychologists_Total = Male_Psychologists + Female_Psychologists,
Psychologists_Male_Ratio = Male_Psychologists / Psychologists_Total,
Psychologists_Female_Ratio = Female_Psychologists / Psychologists_Total
)
# Prepare data for plotting
counselors_data <- data %>%
select(State, Counselors_Male_Ratio, Counselors_Female_Ratio) %>%
gather(key = "Gender", value = "Ratio", Counselors_Male_Ratio, Counselors_Female_Ratio) %>%
mutate(Role = "Counselors", Gender = ifelse(Gender == "Counselors_Male_Ratio", "Male", "Female"))
psychologists_data <- data %>%
select(State, Psychologists_Male_Ratio, Psychologists_Female_Ratio) %>%
gather(key = "Gender", value = "Ratio", Psychologists_Male_Ratio, Psychologists_Female_Ratio) %>%
mutate(Role = "Psychologists", Gender = ifelse(Gender == "Psychologists_Male_Ratio", "Male", "Female"))
combined_data <- bind_rows(counselors_data, psychologists_data)
# Plot gender distribution for counselors and psychologists
ggplot(combined_data, aes(x = State, y = Ratio, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Role, scales = "free_y") +
labs(
title = "Gender Distribution of Counselors and Psychologists by State",
x = "State",
y = "Proportion"
) +
scale_fill_manual(values = c("Male" = "skyblue", "Female" = "lightpink")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
## In this analysis, we aim to compare the age distribution of counselors and psychologists across different states in the US. Specifically, we focus on the proportions of professionals below and above the age of 60. Understanding the age distribution within these professions can provide insights into workforce demographics, potential retirement trends, and future workforce planning. By leveraging graphical methods, we can visualize and summarize the data to reveal patterns and trends in the age distribution of mental health professionals.
# Calculate age group proportions for counselors and psychologists
data <- data %>%
mutate(
Counselors_Total = Counselors_Under60 + Counselors_60plus,
Counselors_Under60_Ratio = Counselors_Under60 / Counselors_Total,
Counselors_60plus_Ratio = Counselors_60plus / Counselors_Total,
Psychologists_Total = Psychologists_Under60 + Psychologists_60plus,
Psychologists_Under60_Ratio = Psychologists_Under60 / Psychologists_Total,
Psychologists_60plus_Ratio = Psychologists_60plus / Psychologists_Total
)
# Prepare data for plotting
counselors_age_data <- data %>%
select(State, Counselors_Under60_Ratio, Counselors_60plus_Ratio) %>%
gather(key = "Age_Group", value = "Ratio", Counselors_Under60_Ratio, Counselors_60plus_Ratio) %>%
mutate(Role = "Counselors", Age_Group = ifelse(Age_Group == "Counselors_Under60_Ratio", "Under 60", "60+"))
psychologists_age_data <- data %>%
select(State, Psychologists_Under60_Ratio, Psychologists_60plus_Ratio) %>%
gather(key = "Age_Group", value = "Ratio", Psychologists_Under60_Ratio, Psychologists_60plus_Ratio) %>%
mutate(Role = "Psychologists", Age_Group = ifelse(Age_Group == "Psychologists_Under60_Ratio", "Under 60", "60+"))
combined_age_data <- bind_rows(counselors_age_data, psychologists_age_data)
# Plot age distribution for counselors and psychologists
ggplot(combined_age_data, aes(x = State, y = Ratio, fill = Age_Group)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Role, scales = "free_y") +
labs(
title = "Age Distribution of Counselors and Psychologists by State",
x = "State",
y = "Proportion"
) +
scale_fill_manual(values = c("Under 60" = "lightblue", "60+" = "lightgreen")) + # Customize colors here
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
summary(data)
# Calculate summary statistics for Total Counselors and Total Psychologists
summary_stats <- data %>%
summarise(
Mean_Total = mean(Total_Counselors + Total_Psychologists),
Median_Total = median(Total_Counselors + Total_Psychologists),
SD_Total = sd(Total_Counselors + Total_Psychologists),
)
# Print summary statistics in a simple table format
print(summary_stats)
data <- data %>%
mutate(Total_Mental_Health_Professionals = Total_Counselors + Total_Psychologists)
# Plot the total distribution of mental health professionals by state
ggplot(data, aes(x = reorder(State, -Total_Mental_Health_Professionals), y = Total_Mental_Health_Professionals)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Total Distribution of Mental Health Professionals by State",
x = "State",
y = "Total Mental Health Professionals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data <- data %>%
mutate(Total_Mental_Health_Professionals = Total_Counselors + Total_Psychologists)
# Plot the distribution of mental health professionals by state
ggplot(data, aes(x = reorder(State, -Total_Mental_Health_Professionals), y = Total_Mental_Health_Professionals)) +
geom_bar(stat = "identity", fill = "rosybrown1") +
labs(title = "Distribution of Mental Health Professionals by State",
x = "State",
y = "Total Mental Health Professionals") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate the proportion of mental health population (counselors + psychologists) to the total population
state_data1 <- data %>%
mutate(Mental_Health_Population = Total_Counselors + Total_Psychologists,
Proportion_Mental_Health = Mental_Health_Population / Population)
# Order the data by Proportion_Mental_Health in descending order
state_data1 <- state_data1 %>%
arrange(desc(Proportion_Mental_Health))
# Plot the proportion of mental health population to the total population for each state
ggplot(state_data1, aes(x = reorder(State, -Proportion_Mental_Health), y = Proportion_Mental_Health)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Proportion of Mental Health Population to Total Population by State",
x = "State",
y = "Proportion of Mental Health Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the proportion of mental health population to the total population for each state
ggplot(state_data1, aes(x = reorder(State, -Proportion_Mental_Health), y = Proportion_Mental_Health)) +
geom_bar(stat = "identity", fill = "rosyblue1") +
labs(title = "Proportion of Mental Health Population to Total Population by State",
x = "State",
y = "Proportion of Mental Health Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the proportion of mental health population to the total population for each state
ggplot(state_data1, aes(x = reorder(State, -Proportion_Mental_Health), y = Proportion_Mental_Health)) +
geom_bar(stat = "identity", fill = "rosybrown1") +
labs(title = "Proportion of Mental Health Population to Total Population by State",
x = "State",
y = "Proportion of Mental Health Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert data to long format for plotting
long_data <- data %>%
select(State, Psychologists_Research_Development_Services, School_Psychologists,
Psychologists_Other_Health_Practitioners_Offices, Psychologists_Outpatient_Care_Centers,
Psychologists_Hospitals, Psychologists_Individual_Family_Services) %>%
pivot_longer(cols = -State, names_to = "Category", values_to = "Count")
# Plot the distribution for each category of psychologists by state in descending order
ggplot(long_data, aes(x = reorder(State, -Count), y = Count, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Distribution of Different Types of Psychologists by State",
x = "State",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "GrandBudapest2")
# Convert data to long format for plotting
long_data <- data %>%
select(State, Psychologists_Research_Development_Services, School_Psychologists,
Psychologists_Other_Health_Practitioners_Offices, Psychologists_Outpatient_Care_Centers,
Psychologists_Hospitals, Psychologists_Individual_Family_Services) %>%
pivot_longer(cols = -State, names_to = "Category", values_to = "Count")
# Plot the distribution for each category of psychologists by state in descending order
ggplot(long_data, aes(x = reorder(State, -Count), y = Count, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Distribution of Different Types of Psychologists by State",
x = "State",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Chroma")
# Convert data to long format for plotting
long_data <- data %>%
select(State, Psychologists_Research_Development_Services, School_Psychologists,
Psychologists_Other_Health_Practitioners_Offices, Psychologists_Outpatient_Care_Centers,
Psychologists_Hospitals, Psychologists_Individual_Family_Services) %>%
pivot_longer(cols = -State, names_to = "Category", values_to = "Count")
# Plot the distribution for each category of psychologists by state in descending order
ggplot(long_data, aes(x = reorder(State, -Count), y = Count, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Distribution of Different Types of Psychologists by State",
x = "State",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
# Calculate the proportion of school psychologists among all psychologists
filtered_data <- data %>%
mutate(Proportion_School_Psychologists = School_Psychologists / Total_Psychologists)
# Order the data by Proportion_School_Psychologists in descending order
filtered_data <- filtered_data %>%
arrange(desc(Proportion_School_Psychologists))
# Plot the proportion of school psychologists among all psychologists for each state
ggplot(filtered_data, aes(x = reorder(State, -Proportion_School_Psychologists), y = Proportion_School_Psychologists)) +
geom_bar(stat = "identity", fill = "rosybrown1") +
labs(title = "Proportion of School Psychologists Among All Psychologists by State",
x = "State",
y = "Proportion of School Psychologists") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Scatter plot with linear regression line
ggplot(data, aes(x = School_Psychologists_Employment, y = School_Psychologists_Median_Wage)) +
geom_point(color = "skyblue") +
geom_smooth(method = "lm", se = FALSE, color = "rosybrown1") +
labs(title = "Relationship between Number of School Psychologists and Median Wage",
x = "Number of School Psychologists",
y = "Median Wage for School Psychologists") +
theme_minimal()
# Select relevant columns for correlation analysis
correlation_data <- data %>%
select(Clinical_Psychologists_Employment, Clinical_Psychologists_Median_Wage,
School_Psychologists_Employment, School_Psychologists_Median_Wage)
# Calculate the correlation matrix
correlation_matrix <- cor(correlation_data, use = "complete.obs")
# Print the correlation matrix
print(correlation_matrix)
# Create a correlation plot
ggcorrplot(correlation_matrix,
hc.order = TRUE,
type = "lower",
lab = TRUE,
lab_size = 3,
method = "circle",
colors = c("tomato2", "white", "springgreen3"),
title = "Correlation Matrix of Psychologists' Employment and Median Wage",
ggtheme = theme_minimal)
# Scatter plot: Clinical Psychologists' Employment vs. Median Wage
ggplot(data, aes(x = Clinical_Psychologists_Employment, y = Clinical_Psychologists_Median_Wage)) +
geom_point(color = 'blue') +
labs(title = "Clinical Psychologists: Employment vs. Median Wage",
x = "Clinical Psychologists' Employment",
y = "Median Wage") +
theme_minimal()
# Scatter plot: School Psychologists' Employment vs. Median Wage
ggplot(data, aes(x = School_Psychologists_Employment, y = School_Psychologists_Median_Wage)) +
geom_point(color = 'red') +
labs(title = "School Psychologists: Employment vs. Median Wage",
x = "School Psychologists' Employment",
y = "Median Wage") +
theme_minimal()
# Select relevant columns for correlation analysis
correlation_data <- data %>%
select(Clinical_Psychologists_Employment, Clinical_Psychologists_Median_Wage,
School_Psychologists_Employment, School_Psychologists_Median_Wage)
# Calculate the correlation matrix
correlation_matrix <- cor(correlation_data, use = "complete.obs")
# Print the correlation matrix
print(correlation_matrix)
# Scatter plot: Clinical Psychologists' Employment vs. Median Wage with trend line
ggplot(data, aes(x = Clinical_Psychologists_Employment, y = Clinical_Psychologists_Median_Wage)) +
geom_point(color = 'blue') +
geom_smooth(method = "lm", color = "darkblue", se = FALSE) +
labs(title = "Clinical Psychologists: Employment vs. Median Wage",
x = "Clinical Psychologists' Employment",
y = "Median Wage") +
theme_minimal()
# Scatter plot: School Psychologists' Employment vs. Median Wage with trend line
ggplot(data, aes(x = School_Psychologists_Employment, y = School_Psychologists_Median_Wage)) +
geom_point(color = 'red') +
geom_smooth(method = "lm", color = "darkred", se = FALSE) +
labs(title = "School Psychologists: Employment vs. Median Wage",
x = "School Psychologists' Employment",
y = "Median Wage") +
theme_minimal()
# Scatter plot: Clinical Psychologists' Employment vs. Median Wage with trend line
ggplot(data, aes(x = Clinical_Psychologists_Employment, y = Clinical_Psychologists_Median_Wage)) +
geom_point(color = 'grey') +
geom_smooth(method = "lm", color = "rosybrown1", se = FALSE) +
labs(title = "Clinical Psychologists: Employment vs. Median Wage",
x = "Clinical Psychologists' Employment",
y = "Median Wage") +
theme_minimal()
# Scatter plot: School Psychologists' Employment vs. Median Wage with trend line
ggplot(data, aes(x = School_Psychologists_Employment, y = School_Psychologists_Median_Wage)) +
geom_point(color = 'grey') +
geom_smooth(method = "lm", color = "rosybrown1", se = FALSE) +
labs(title = "School Psychologists: Employment vs. Median Wage",
x = "School Psychologists' Employment",
y = "Median Wage") +
theme_minimal()
# Calculate the total number of male and female counselors and psychologists
total_female <- sum(data$Female_Counselors + data$Female_Psychologists, na.rm = TRUE)
total_male <- sum(data$Male_Counselors + data$Male_Psychologists, na.rm = TRUE)
# Create a dataframe for the pie chart
gender_data <- data.frame(
Gender = c("Female", "Male"),
Count = c(total_female, total_male)
)
# Create the pie chart
ggplot(gender_data, aes(x = "", y = Count, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
labs(title = "Comparison of Total Female vs. Total Male Mental Health Professionals") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank())
# Calculate the total number of male and female counselors and psychologists
total_female <- sum(data$Female_Counselors + data$Female_Psychologists, na.rm = TRUE)
total_male <- sum(data$Male_Counselors + data$Male_Psychologists, na.rm = TRUE)
# Create a dataframe for the pie chart
gender_data <- data.frame(
Gender = c("Female", "Male"),
Count = c(total_female, total_male)
)
# Create the pie chart with custom colors
ggplot(gender_data, aes(x = "", y = Count, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
scale_fill_manual(values = c("Female" = "rosybrown1", "Male" = "skyblue")) +
labs(title = "Comparison of Total Female vs. Total Male Mental Health Professionals") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank())
## In this analysis, we aim to compare the gender distribution between two categories of mental health professionals across different states in the US: Counselors and Psychologists. We utilize graphical methods to visualize and summarize the data.
## We calculate the proportions of male and female professionals in each role and reshape the data into a long format using gather(). This format is suitable for ggplot2, which allows us to easily create plots with multiple categories. To ensure that the State variable is treated as a categorical variable, we convert it to a factor.
## We create bar plots to visualize the gender distribution for each profession across different states. The geom_bar() function with the position = "dodge" parameter allows us to place bars for male and female side by side for comparison.
# Calculate gender ratios for counselors and psychologists
data <- data %>%
mutate(
Counselors_Total = Male_Counselors + Female_Counselors,
Counselors_Male_Ratio = Male_Counselors / Counselors_Total,
Counselors_Female_Ratio = Female_Counselors / Counselors_Total,
Psychologists_Total = Male_Psychologists + Female_Psychologists,
Psychologists_Male_Ratio = Male_Psychologists / Psychologists_Total,
Psychologists_Female_Ratio = Female_Psychologists / Psychologists_Total
)
# Prepare data for plotting
counselors_data <- data %>%
select(State, Counselors_Male_Ratio, Counselors_Female_Ratio) %>%
gather(key = "Gender", value = "Ratio", Counselors_Male_Ratio, Counselors_Female_Ratio) %>%
mutate(Role = "Counselors", Gender = ifelse(Gender == "Counselors_Male_Ratio", "Male", "Female"))
psychologists_data <- data %>%
select(State, Psychologists_Male_Ratio, Psychologists_Female_Ratio) %>%
gather(key = "Gender", value = "Ratio", Psychologists_Male_Ratio, Psychologists_Female_Ratio) %>%
mutate(Role = "Psychologists", Gender = ifelse(Gender == "Psychologists_Male_Ratio", "Male", "Female"))
combined_data <- bind_rows(counselors_data, psychologists_data)
# Plot gender distribution for counselors and psychologists
ggplot(combined_data, aes(x = State, y = Ratio, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Role, scales = "free_y") +
labs(
title = "Gender Distribution of Counselors and Psychologists by State",
x = "State",
y = "Proportion"
) +
scale_fill_manual(values = c("Male" = "skyblue", "Female" = "rosybrown1")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
## In this analysis, we aim to compare the age distribution of counselors and psychologists across different states in the US. Specifically, we focus on the proportions of professionals below and above the age of 60. Understanding the age distribution within these professions can provide insights into workforce demographics, potential retirement trends, and future workforce planning. By leveraging graphical methods, we can visualize and summarize the data to reveal patterns and trends in the age distribution of mental health professionals.
# Calculate age group proportions for counselors and psychologists
data <- data %>%
mutate(
Counselors_Total = Counselors_Under60 + Counselors_60plus,
Counselors_Under60_Ratio = Counselors_Under60 / Counselors_Total,
Counselors_60plus_Ratio = Counselors_60plus / Counselors_Total,
Psychologists_Total = Psychologists_Under60 + Psychologists_60plus,
Psychologists_Under60_Ratio = Psychologists_Under60 / Psychologists_Total,
Psychologists_60plus_Ratio = Psychologists_60plus / Psychologists_Total
)
# Prepare data for plotting
counselors_age_data <- data %>%
select(State, Counselors_Under60_Ratio, Counselors_60plus_Ratio) %>%
gather(key = "Age_Group", value = "Ratio", Counselors_Under60_Ratio, Counselors_60plus_Ratio) %>%
mutate(Role = "Counselors", Age_Group = ifelse(Age_Group == "Counselors_Under60_Ratio", "Under 60", "60+"))
psychologists_age_data <- data %>%
select(State, Psychologists_Under60_Ratio, Psychologists_60plus_Ratio) %>%
gather(key = "Age_Group", value = "Ratio", Psychologists_Under60_Ratio, Psychologists_60plus_Ratio) %>%
mutate(Role = "Psychologists", Age_Group = ifelse(Age_Group == "Psychologists_Under60_Ratio", "Under 60", "60+"))
combined_age_data <- bind_rows(counselors_age_data, psychologists_age_data)
# Plot age distribution for counselors and psychologists
ggplot(combined_age_data, aes(x = State, y = Ratio, fill = Age_Group)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Role, scales = "free_y") +
labs(
title = "Age Distribution of Counselors and Psychologists by State",
x = "State",
y = "Proportion"
) +
scale_fill_manual(values = c("Under 60" = "skyblue", "60+" = "rosybrown1")) + # Customize colors here
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Plot the distribution for Total Counselors by State
ggplot(data, aes(x = State, y = Total_Counselors)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Distribution of Total Counselors by State",
x = "State",
y = "Total Counselors") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the distribution for Total Psychologists by State
ggplot(data, aes(x = State, y = Total_Psychologists)) +
geom_bar(stat = "identity", fill = "red") +
labs(title = "Distribution of Total Psychologists by State",
x = "State",
y = "Total Psychologists") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reshape the data to long format
data_long <- data %>%
select(State, Total_Counselors, Total_Psychologists) %>%
pivot_longer(cols = c(Total_Counselors, Total_Psychologists),
names_to = "Profession",
values_to = "Count")
# Create the combined plot
ggplot(data_long, aes(x = State, y = Count, fill = Profession)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Total_Counselors" = "skyblue", "Total_Psychologists" = "rosybrown1")) +
labs(title = "Distribution of Total Counselors and Psychologists by State",
x = "State",
y = "Count",
fill = "Profession") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reshape the data to long format
data_long <- data %>%
select(State, Total_Counselors, Total_Psychologists) %>%
pivot_longer(cols = c(Total_Counselors, Total_Psychologists),
names_to = "Profession",
values_to = "Count")
# Create the combined plot
ggplot(data_long, aes(x = State, y = Count, fill = Profession)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Total_Counselors" = "skyblue", "Total_Psychologists" = "rosybrown1")) +
labs(title = "Distribution of Counselors and Psychologists by State",
x = "State",
y = "Count",
fill = "Profession") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reshape the data to long format
data_long <- data %>%
select(State, Total_Counselors, Total_Psychologists) %>%
pivot_longer(cols = c(Total_Counselors, Total_Psychologists),
names_to = "Profession",
values_to = "Count")
# Create the combined plot
ggplot(data_long, aes(x = State, y = Count, fill = Profession)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Total_Counselors" = "skyblue", "Total_Psychologists" = "rosybrown1")) +
labs(title = "Distribution of Counselors and Psychologists by State",
x = "State",
y = "Count",
fill = "Profession") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filter and reshape the data for the relevant professions
filtered_data <- data %>%
select(State, Mental_Health_Counselors_Median_Wage, Clinical_Psychologists_Median_Wage, School_Psychologists_Median_Wage) %>%
gather(key = "Profession", value = "Median_Wage", -State)
# Ensure State is treated as a factor
filtered_data$State <- as.factor(filtered_data$State)
# Create the scatter plot with regression lines
ggplot(filtered_data, aes(x = State, y = Median_Wage, color = Profession)) +
geom_point(size = 2, alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, aes(group = Profession)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Comparison of Median Wages by State for Mental Health Professionals",
x = "State", y = "Median Wage", color = "Profession")
renv::init()
renv::init()
renv::snapshot()
renv::restore()
renv::init()
renv::restore()
setwd("~/Desktop/QTM302W")
# Install and load the renv package
install.packages("renv")
library(renv)
# Initialize renv in your project
renv::init()
# Install necessary packages for your project
renv::install("dplyr")
# Install and load the renv package
install.packages("renv")
library(renv)
# Initialize renv in your project
renv::init()
# Install necessary packages for your project
renv::install("dplyr")
renv::restore()
renv::hydrate()
renv::snapshot()
renv::restore()
